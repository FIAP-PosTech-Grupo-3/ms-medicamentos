@baseUrl = http://localhost:8080
@contentType = application/json
@adminAuth = Basic admin@local x
@userAuth = Basic user user
@adminEmail = admin@local.com
@adminPass = x
@userEmail = user
@userPass = user

###############################################################################
# USUÁRIOS (PUBLIC & PROTECTED)
###############################################################################

### 0. Cadastrar ADMIN padrão (execute primeiro) - PÚBLICO
# Cria um admin ativo com email admin@local e senha x
# Necessário para autenticar nas rotas protegidas (Basic auth usa o email)
POST {{baseUrl}}/api/usuarios
Content-Type: {{contentType}}

{
  "nome": "Admin",
  "email": "{{adminEmail}}",
  "senha": "x",
  "papel": "ADMIN",
  "ativo": true
}

###

### 1. Cadastrar usuário - SUCESSO (Endpoint Público)
# @name createUser
POST {{baseUrl}}/api/usuarios
Content-Type: {{contentType}}

{
  "nome": "Novo Usuário Teste",
  "email": "novo.usuario@teste.com",
  "senha": "senha123",
  "papel": "USUARIO"
}

###

### 2. Cadastrar usuário ADMIN - SUCESSO (Endpoint Público)
POST {{baseUrl}}/api/usuarios
Content-Type: {{contentType}}

{
  "nome": "Novo Admin Teste",
  "email": "novo.admin@teste.com",
  "senha": "admin123",
  "papel": "ADMIN"
}

###

### 3. Cadastrar usuário - ERRO: Papel inválido (500)
POST {{baseUrl}}/api/usuarios
Content-Type: {{contentType}}

{
  "nome": "Usuário com Erro",
  "email": "erro@teste.com",
  "senha": "senha123",
  "papel": "INVALIDO"
}

###

### 4. Listar todos os usuários - SUCESSO (Protegido - ADMIN)
GET {{baseUrl}}/api/usuarios
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Accept: {{contentType}}

###

### 5. Listar todos os usuários - SUCESSO (Protegido - USUARIO)
GET {{baseUrl}}/api/usuarios
Authorization: Basic {{$base64 {{userEmail}}:{{userPass}}}}
Accept: {{contentType}}

###

### 6. Listar todos os usuários - ERRO: Sem autenticação (401)
GET {{baseUrl}}/api/usuarios
Accept: {{contentType}}

###

### 7. Buscar usuário por ID - SUCESSO (Protegido)
GET {{baseUrl}}/api/usuarios/1
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Accept: {{contentType}}

###

### 8. Atualizar usuário - SUCESSO (Protegido - ADMIN)
PUT {{baseUrl}}/api/usuarios/1
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Content-Type: {{contentType}}

{
  "nome": "Administrador Atualizado",
  "email": "{{adminEmail}}",
  "papel": "ADMIN",
  "ativo": true
}

###

### 9. Atualizar usuário - ERRO: Sem permissão (403 Forbidden - USUARIO)
PUT {{baseUrl}}/api/usuarios/2
Authorization: Basic {{$base64 {{userEmail}}:{{userPass}}}}
Content-Type: {{contentType}}

{
  "nome": "Usuário Comum Tentando Atualizar",
  "email": "user@local.com",
  "papel": "USUARIO",
  "ativo": false
}

###

### 10. Deletar usuário - SUCESSO (Protegido - ADMIN)
DELETE {{baseUrl}}/api/usuarios/3
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Accept: {{contentType}}

###

### 10.1 Atualizar usuário - SUCESSO (Protegido - ADMIN)
# Atualiza o usuário de ID 1 (ajuste o ID conforme o seu ambiente)
PUT {{baseUrl}}/api/usuarios/1
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Content-Type: {{contentType}}

{
  "nome": "Administrador Atualizado",
  "email": "{{adminEmail}}",
  "papel": "ADMIN",
  "ativo": true
}

###

### 10.2 Atualizar usuário - ERRO 404 (Protegido - ADMIN)
PUT {{baseUrl}}/api/usuarios/999
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Content-Type: {{contentType}}

{
  "nome": "Xpto",
  "email": "xpto@ex.com",
  "papel": "ADMIN",
  "ativo": true
}

###

### 10.3 Atualizar usuário - ERRO 400 validação (Protegido - ADMIN)
PUT {{baseUrl}}/api/usuarios/1
Authorization: Basic {{$base64 {{adminEmail}}:{{adminPass}}}}
Content-Type: {{contentType}}

{
  "nome": "",
  "email": "",
  "papel": null,
  "ativo": null
}

###

###############################################################################
# MEDICAMENTOS (Consulta Pública, Modificação Protegida)
###############################################################################

### 11. Listar todos os medicamentos (Público)
GET {{baseUrl}}/api/medicamentos
Accept: {{contentType}}

###

### 12. Cadastrar medicamento - SUCESSO (Protegido - ADMIN)
POST {{baseUrl}}/api/medicamentos
Authorization: {{adminAuth}}
Content-Type: {{contentType}}

{
  "nome": "Ibuprofeno 600mg",
  "dosagem": "600mg",
  "fabricante": "Medley",
  "principioAtivo": "Ibuprofeno"
}

###

### 13. Cadastrar medicamento - ERRO: Sem permissão (403 Forbidden - USUARIO)
POST {{baseUrl}}/api/medicamentos
Authorization: {{userAuth}}
Content-Type: {{contentType}}

{
  "nome": "Aspirina (sem permissão)",
  "dosagem": "500mg",
  "fabricante": "Bayer",
  "principioAtivo": "Ácido acetilsalicílico"
}

###

###############################################################################
# UNIDADES DE SAÚDE (Consulta Pública, Modificação Protegida)
###############################################################################

### 14. Listar todas as unidades de saúde (Público)
GET {{baseUrl}}/api/unidades-saude
Accept: {{contentType}}

###

### 15. Cadastrar unidade de saúde - SUCESSO (Protegido - ADMIN)
POST {{baseUrl}}/api/unidades-saude
Authorization: {{adminAuth}}
Content-Type: {{contentType}}

{
  "nome": "UBS Central",
  "endereco": "Rua Principal, 100",
  "ativa": true
}

###

###############################################################################
# ESTOQUE (Consulta Pública, Modificação Protegida)
###############################################################################

### 16. Adicionar estoque - SUCESSO (Protegido - ADMIN)
POST {{baseUrl}}/api/estoque/adicionar
Authorization: {{adminAuth}}
Content-Type: {{contentType}}

{
  "medicamentoId": 1,
  "unidadeSaudeId": 1,
  "quantidade": 100,
  "quantidadeMinima": 20
}

###

### 17. Remover estoque - SUCESSO (Protegido - ADMIN)
POST {{baseUrl}}/api/estoque/remover
Authorization: {{adminAuth}}
Content-Type: {{contentType}}

{
  "medicamentoId": 1,
  "unidadeSaudeId": 1,
  "quantidade": 10
}

###

### 18. Consultar todo o estoque (Público)
GET {{baseUrl}}/api/estoque
Accept: {{contentType}}

###

### 19. Buscar estoque por medicamento e unidade - SUCESSO (Público)
GET {{baseUrl}}/api/estoque/medicamento/1/unidade/1
Accept: {{contentType}}

###

### 20. Buscar estoque por medicamento e unidade - ERRO: Não encontrado (404)
GET {{baseUrl}}/api/estoque/medicamento/999/unidade/999
Accept: {{contentType}}

###
